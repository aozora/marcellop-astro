---
const t1 = 'MARCELLO PALMITESSA';
const t2 = 'FREELANCE FULL STACK';
const t3 = 'ARCHITECT DEVELOPER';
const t4 = 'MENTOR TEAM LEADER';
---

<script>
  import gsap from 'gsap';
  import {ScrollTrigger} from "gsap/ScrollTrigger";
  import {getHeroTimeline} from '@/lib/animations';

  gsap.registerPlugin(ScrollTrigger);

  window.addEventListener('load', (event) => {
    const chars1 = Array.from(document.querySelectorAll<HTMLElement>('.hero2-title1 .char span'));
    const tl = gsap.timeline({ paused: true });

    tl.fromTo(
      chars1,
      {
        "--text-weight": 500,
        // color: "var(--theme-foreground)",
      },
      {
        "--text-weight": 700,
        // color: "var(--theme-brand)",
        yoyo: true,
        repeat: -1,
        duration: 2,
        stagger: 0.1,
      },
    );
    tl.play();
  });
</script>

<!--<div class="main-content">-->
  <div class="hero2">
    <h2 class="hero2-title1">
      <span class="visuallyhidden">{t1}&nbsp;{t2}</span>

      <span class="word title-top">
      {Array.from(t1).map((char, charIndex) => (
          <span class="char">
            {char === ' ' && <span class="space">&nbsp;</span>}
            {char !== ' ' && <span>{char}</span>}
        </span>
      ))}
      </span>

      <span class="word">
      {Array.from(t2).map((char, charIndex) => (
          <span class="char">
          {char === ' ' && <span class="space">&nbsp;</span>}
            {char !== ' ' && <span>{char}</span>}
        </span>
      ))}
      </span>

      <span class="word">
      {Array.from(t3).map((char, charIndex) => (
          <span class="char">
          {char === ' ' && <span class="space">&nbsp;</span>}
            {char !== ' ' && <span>{char}</span>}
        </span>
      ))}
      </span>

      <span class="word">
      {Array.from(t4).map((char, charIndex) => (
          <span class="char">
          {char === ' ' && <span class="space">&nbsp;</span>}
            {char !== ' ' && <span>{char}</span>}
        </span>
      ))}
      </span>
    </h2>

    <img class="hero2-img" src="/img/marcello-and-tato.jpg" alt=""/>
  </div>

<!--</div>-->

<style lang="scss">
  @use '../styles/shared' as *;

  .main-content {
    overflow: hidden;
    position: relative;
  }

  .hero2 {
    overflow: hidden;
    position: relative;
    display: grid;
    grid-template-columns: 80% 20%;
    gap: 1rem;
    width: 100%;
    @include container;
    /*padding: 0;*/

    & {
      --color-line: #1d1c1c;
      --line-size: 1.5rem;

      margin-bottom: 2rem;
      padding-top: 3rem;
      padding-bottom: 3rem;
      background-image: linear-gradient(to right, var(--color-line) 1px, transparent 1px),
      linear-gradient(to bottom, var(--color-line) 1px, transparent 1px);
      background-size: var(--line-size) var(--line-size);
      background-position: center center;
      background-attachment: fixed;
    }
  }

  .hero2-title1 {
    /*flex: 0 0 80%;*/
    position: relative; // needed for reveal animation
    width: 100%;
    max-width: none;
    margin: 0 auto;
    font-family: var(--body-font-family);
    font-optical-sizing: auto;
    font-variation-settings: "slnt" 0, "GRAD" 0, "XOPQ" 96, "XTRA" 468, "YOPQ" 79, "YTAS" 750, "YTDE" -203, "YTFI" 738, "YTLC" 514, "YTUC" 712;
    font-size: 6.5vw;
    font-weight: 700;
    line-height: 1.1;
    text-align: justify;
    text-wrap: balance;

    .title-top {
      color: var(--theme-brand);
    }

    span:not(.char) {
      /*--delay: calc((var(--char-index) + 1) * 400ms);*/
      --text-weight-max: 700;
      --text-weight-min: 300;
      --text-weight: var(--text-weight-max);
      font-weight: var(--text-weight);
    }

    .space {
      width: 1ch;
    }

    /*.word:nth-child(3),*/
    /*.word:nth-child(5) {*/
    /*  font-style: italic;*/
    /*}*/
  }

  .hero2-img {
    /*flex: 0 0 20%;*/
    /*width: 20%;*/
    height: 100%;
    max-width: 100%;
    width: 100%;
    object-fit: cover;
    filter: grayscale(1);

    &:hover,
    &:focus-visible {
      filter: none;
    }
  }

  .word {
    display: flex;
    width: 100%;
    justify-content: space-evenly;
  }
</style>
